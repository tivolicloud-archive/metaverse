stages:
    - dependencies
    - test
    - build
    - predeploy
    - deploy

before_script:
    - export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true

server deps:
    stage: dependencies
    image: node:lts

    cache:
        paths:
            - server/node_modules/

    script:
        - cd server
        - yarn install

    only:
        changes:
            - server/yarn.lock

frontend deps:
    stage: dependencies
    image: node:lts

    cache:
        paths:
            - frontend/node_modules/

    script:
        - cd frontend
        - yarn install

    only:
        changes:
            - frontend/yarn.lock

# server tests:
#     stage: test
#     image: node:lts

#     cache:
#         policy: pull
#         paths:
#             - server/node_modules/

#     script:
#         - cd server
#         - yarn install
#         - yarn run test:cov

#     coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/

#     artifacts:
#         expire_in: 7 days
#         paths:
#             - server/coverage/
#         reports:
#             junit: server/junit.xml

build all:
    stage: build
    image: node:lts

    # needs:
    #     - job: server tests

    cache:
        policy: pull
        paths:
            - server/node_modules/
            - frontend/node_modules/

    script:
        - ./build.sh

    artifacts:
        expire_in: 7 days
        paths:
            - app

deploy docker image:
    stage: predeploy
    image: docker:latest

    only:
        refs:
            - master@tivolicloud-private/metaverse
        changes:
            - Dockerfile.base

    variables:
        DOCKER_TLS_CERTDIR: ""

    services:
        - docker:dind

    script:
        - docker login $CI_REGISTRY -u gitlab-ci-token -p $CI_JOB_TOKEN
        - docker build -t $CI_REGISTRY/tivolicloud-private/metaverse:base -f Dockerfile.base .
        - docker push $CI_REGISTRY/tivolicloud-private/metaverse:base

deploy latest image:
    stage: deploy
    image: docker:latest

    needs:
        - job: build all
          artifacts: true

    variables:
        DOCKER_TLS_CERTDIR: ""

    services:
        - docker:dind

    script:
        - docker login $CI_REGISTRY -u gitlab-ci-token -p $CI_JOB_TOKEN
        - docker build -t $CI_REGISTRY/tivolicloud-private/metaverse:latest -f Dockerfile .
        - docker push $CI_REGISTRY/tivolicloud-private/metaverse:latest
# deploy app engine:
#     stage: deploy
#     image: google/cloud-sdk:alpine

#     when: manual
#     allow_failure: false

#     needs:
#         - job: build all
#           artifacts: true

#     # https://medium.com/google-cloud/automatically-deploy-to-google-app-engine-with-gitlab-ci-d1c7237cbe11
#     script:
#         - cat $GCP_ENV_VARIABLES >> app.yaml
#         - gcloud auth activate-service-account --key-file $GCP_AUTH_JSON
#         - gcloud --quiet --project tivolicloud app deploy --version $CI_PIPELINE_ID

# deploy eb:
#     stage: deploy
#     # TODO: replace with own image
#     image: agoncaruks/aws-elastic-beanstalk-cli

#     when: manual
#     allow_failure: false

#     needs:
#         - job: build all
#           artifacts: true

#     script:
#         - mkdir -p ~/.aws/
#         - echo "[profile eb-cli]" > ~/.aws/config
#         - echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> ~/.aws/config
#         - echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> ~/.aws/config

#         # no codecommit or exit code 1
#         - yes n | eb init tivolicloud -r us-east-1 || if [ $? -eq 1 ]; then echo ""; else echo ""; fi
#         - eb deploy tivolicloud --timeout 60
