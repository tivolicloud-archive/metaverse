stages:
    - dependencies
    - test
    - build
    - deploy

server deps:
    stage: dependencies
    image: node:lts

    cache:
        paths:
            - server/node_modules/

    script:
        - cd server
        - yarn install

    only:
        changes:
            - server/yarn.lock

frontend deps:
    stage: dependencies
    image: node:lts

    cache:
        paths:
            - frontend/node_modules/

    script:
        - cd frontend
        - yarn install

    only:
        changes:
            - frontend/yarn.lock

server tests:
    stage: test
    image: node:lts

    cache:
        policy: pull
        paths:
            - server/node_modules/

    variables:
        PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"

    script:
        - cd server
        - yarn install
        - yarn run test:cov

    coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/

    artifacts:
        expire_in: 7 days
        paths:
            - server/coverage/
        reports:
            junit: server/junit.xml

build all:
    stage: build
    image: node:lts

    dependencies:
        - server tests

    cache:
        policy: pull
        paths:
            - server/node_modules/
            - frontend/node_modules/

    script:
        - ./build.sh

    artifacts:
        expire_in: 7 days
        paths:
            - app

# deploy docker image:
#     stage: deploy
#     image: docker:latest

#     # when: manual

#     dependencies:
#         - build all

#     variables:
#         DOCKER_TLS_CERTDIR: ""

#     services:
#         - docker:dind

#     script:
#         - docker build -t $CI_REGISTRY/tivolicloud-private/metaverse:latest .
#         - docker login $CI_REGISTRY -u gitlab-ci-token -p $CI_JOB_TOKEN
#         - docker push $CI_REGISTRY/tivolicloud-private/metaverse:latest

deploy app engine:
    stage: deploy
    image: google/cloud-sdk:alpine

    when: manual
    allow_failure: false

    dependencies:
        - build all

    # https://medium.com/google-cloud/automatically-deploy-to-google-app-engine-with-gitlab-ci-d1c7237cbe11
    script:
        - echo $GCP_AUTH_JSON | base64 -d > /tmp/gcp-auth.json
        - echo $GCP_ENV_VARIABLES | base64 -d >> app.yaml

        - gcloud auth activate-service-account --key-file /tmp/gcp-auth.json
        - gcloud --quiet --project tivolicloud app deploy --version $CI_PIPELINE_ID
