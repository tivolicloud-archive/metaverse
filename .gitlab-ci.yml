stages:
    - dependencies
    - test
    - build
    - deploy

include:
    - template: Dependency-Scanning.gitlab-ci.yml

server deps:
    stage: dependencies
    image: node:lts

    cache:
        paths:
            - server/node_modules/

    script:
        - cd server
        - yarn install

    only:
        changes:
            - server/yarn.lock

frontend deps:
    stage: dependencies
    image: node:lts

    cache:
        paths:
            - frontend/node_modules/

    script:
        - cd frontend
        - yarn install

    only:
        changes:
            - frontend/yarn.lock

server tests:
    stage: test
    image: node:lts

    cache:
        policy: pull
        paths:
            - server/node_modules/

    script:
        - cd server
        - yarn run test:cov

    coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/

    artifacts:
        expire_in: 7 days
        paths:
            - server/coverage/
        reports:
            junit: server/junit.xml

build server:
    stage: build
    image: node:lts

    dependencies:
        - server tests

    cache:
        policy: pull
        paths:
            - server/node_modules/

    script:
        - mkdir -p app app/server

        - cd server
        - yarn run build

        - cp -r dist ../app/server
        - cp -r assets ../app/server
        - cp -r templates ../app/server
        - cp -r package.json ../app/server

    artifacts:
        expire_in: 7 days
        paths:
            - app/server

build frontend:
    stage: build
    image: node:lts

    cache:
        policy: pull
        paths:
            - frontend/node_modules/

    script:
        - mkdir -p app app/frontend

        - cd frontend
        - yarn run build:ssr

        - cp -r dist ../app/frontend

    artifacts:
        expire_in: 7 days
        paths:
            - app/frontend

deploy docker image:
    stage: deploy
    image: docker:latest

    # when: manual

    dependencies:
        - build server
        - build frontend

    variables:
        DOCKER_TLS_CERTDIR: ""

    services:
        - docker:dind

    script:
        - docker build -t registry.tivolicloud.com/tivolicloud-private/metaverse:latest .

        - docker login registry.tivolicloud.com -u makitsune -p $GITLAB_TOKEN
        - docker push registry.tivolicloud.com/tivolicloud-private/metaverse:latest
#pages:
#    stage: deploy
#    dependencies:
#        - server tests
#    script:
#        - mv server/coverage/lcov-report public/
#    artifacts:
#        expire_in: 7 days
#        paths:
#            - public
